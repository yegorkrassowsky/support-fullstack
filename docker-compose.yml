version: "3.8"

services:

  proxy:
    image: nginx:alpine
    container_name: proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs/nginx:/var/log/nginx
    healthcheck:
      test: curl -f ${HOST}/ & curl -f ${API_HOST} || exit 1
      timeout: 10s
      retries: 5
    depends_on:
      api:
        condition: service_healthy
      frontend:
        condition: service_healthy
    networks:
      - front
      - back

  frontend:
    image: reactjs/nginx
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - API_URL=http://${API_HOST}  
    container_name: frontend
    volumes:
      - ./logs/frontend:/var/log/nginx
    healthcheck:
      test: curl -f ${HOST}/ || exit 1
      timeout: 10s
      retries: 5
    depends_on:
      api:
        condition: service_healthy
    networks:
      - front
  
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - API_URL=http://${API_HOST}
        - HOST=${HOST}  
    image: laravel/php/apache
    container_name: api
    restart: unless-stopped
    tty: true
    volumes:
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./apache/sites-available:/etc/apache2/sites-available
      - ./logs/apache:/var/log/apache2
    environment:
      SERVICE_NAME: api
      SERVICE_TAGS: dev
    working_dir: /var/www
    healthcheck:
      test: curl -f ${API_HOST}/ || exit 1
      timeout: 10s
      retries: 5
    depends_on:
      db:
        condition: service_healthy
    networks:
      - back

  composer:
    container_name: composer
    image: composer
    working_dir: /var/www
    volumes:
      - ./api:/var/www
    command: composer install --ignore-platform-reqs

  db:
    image: mysql:latest
    container_name: db
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    volumes:
      - ./data:/var/lib/mysql
    environment:
      MYSQL_USER: "user"
      MYSQL_PASSWORD: "password"
      MYSQL_DATABASE: "database"
      MYSQL_ROOT_PASSWORD: "rootpass"
    healthcheck:
      test: mysql --user=$$MYSQL_USER --password=$$MYSQL_PASSWORD -e 'SHOW DATABASES;'
      timeout: 20s
      retries: 10
    networks:
      - back
networks:
  front:
    driver: bridge
  back:
    driver: bridge
